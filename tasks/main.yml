---
- name: Assert if operating system is not RHEL
  assert:
    that:
      - "ansible_distribution != 'RedHat'"
    msg: "The distribution is {{ ansible_distribution }}. It must be CentOS or Oracle Linux. Quitting"

- name: Assert that subscription-manager variables are defined
  assert:
    that:
      - "satellite_host is defined"
      - "satellite_activationkey is defined"
      - "satellite_organization is defined"
    msg: "Subscription manager variables are not defined. See documentation."

- debug:
    var: "{{ item }}"
  with_items:
    - satellite_host
    - satellite_activationkey
    - satellite_organization

- name: Assert that the RHEL variant is defined
  assert:
    that:
      - "rhel_variant is defined"
#      - "rhel_variant in supported_rhel_variants"
    msg: "RHEL variant is not defined or unsupported. See documentation."

- name: Create snapshot before conversion
  include_role:
    name: "ims.manageiq_vm_snapshot"
  vars:
    role_action: "create"
    snapshot_name: "Before convert2rhel"
    snapshot_mode: "cold"

- block:
    - name: Enabled EPEL repository
      yum:
        name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present
        update_cache: yes

    - name: Install convert2rhel package
      yum:
        name:
          - convert2rhel
        state: present
        update_cache: yes

    - name: Create extra folders for convert2rhel
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items:
        - /usr/share/convert2rhel/subscription-manager
        - /usr/share/convert2rhel/redhat-release/Server
        - /var/lib/rpm-state

    - name: Download subscription-manager packages
      yum:
        name:
          - subscription-manager
          - subscription-manager-rhsm
          - subscription-manager-rhsm-certificates
          - "http://{{ satellite_host }}/pub/katello-ca-consumer-latest.noarch.rpm"
        download_only: yes
        download_dir: /usr/share/convert2rhel/subscription-manager

    - name: Identify redhat-release-server package path
      find:
        paths: /var/lib/pulp/content/units/rpm
        patterns: "redhat-release-server-*.rpm"
        recurse: yes
      register: redhat_release_files
      delegate_to: satellite.example.com

    - name: Store the package file name
      set_fact:
        redhat_release_filename: "{{ (redhat_release_files | json_query('files[*].{mtime: mtime, path: path}') | sort(attribute='mtime') | last).path }}"

    - name: Download redhat-release-server package file
      fetch:
        src: "{{ redhat_release_filename }}"
        dest: "/tmp"
      delegate_to: satellite.example.com

    - name: Copy redhat-release-server package to host
      copy:
        src: "/tmp/{{ ansible_hostname }}/{{ redhat_release_filename }}"
        dest: /usr/share/convert2rhel/redhat-release/Server

    - name: "Add {{ ansible_distribution_major_version }}Server to file /etc/yum/vars/releasever if it does not exist on this CentOS {{ ansible_distribution_major_version }} system"
      lineinfile:
        path: /etc/yum/vars/releasever
        line: "{{ ansible_distribution_major_version }}Server"
        create: yes
      when: (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '6') or (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7')

    - block:
        - name: Install required packages on Oracle
          yum:
            name:
              - python-six
            state: present

        - name: Remove blocking packages on Oracle
          yum:
            name:
              - rhn-client-tools
            state: absent

      when: ansible_distribution == 'OracleLinux' 

    - name: Launch conversion asynchronously
      command: convert2rhel -o {{ satellite_organization }} -k {{ satellite_activationkey }} -v {{ rhel_variant }} -y
      async: "{{ convert2rhel_timeout }}"
      poll: 0
      register: convert2rhel_async

    - name: Check if conversion is finished
      async_status:
        jid: "{{ convert2rhel_async.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: "{{ ( convert2rhel_timeout / convert2rhel_retry_interval ) | int }}"
      delay: "{{ convert2rhel_retry_interval }}"

    - name: Reboot machine with a 15 minutes timeout
      reboot:
        reboot_timeout: 900

    - name: Clear YUM cache the hard way
      file:
        path: /var/cache/yum
        state: absent

    - name: Install required packages for Insights
      yum:
        name:
          - katello-agent
          - katello-host-tools
          - katello-host-tools-tracer
          - insights-client
        state: present
        update_cache: yes

    - name: Add Satellite SSH public key to authorized keys
      lineinfile:
        path: /root/.ssh/authorized_keys
        line: "{{ lookup('url', 'https://' + satellite_host + ':9090/ssh/pubkey', split_line=False, validate_certs=False) }}"

    - name: Register machine to Insights
      command: insights-client --register

  rescue:
    - name: Revert snapshot to previous state
      include_role:
        name: "ims.manageiq_vm_snapshot"
      vars:
        role_action: "revert"
        snapshot_name: "Before convert2rhel"
        snapshot_mode: "cold"
        snapshot_delete_after_revert: true
